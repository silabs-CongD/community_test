name: SonarQube-Check
on:
  pull_request_target:
    types: [opened, synchronize, edited]

  # workflow_dispatch:

env:
  GH_PAGE_ROOT_URL: https://studious-adventure-mrynnzo.pages.github.io

jobs:
  check-sonar:
    runs-on: ubuntu-latest
    steps:
      - name: GH Apps gen token
        id: app-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ vars.SILABS_SVC_DEVOPS_GITHUB_APP_ID }}
          private-key: ${{ secrets.SILABS_SVC_DEVOPS_GITHUB_PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}

      - name: Trigger Workflow
        id: trigger
        run: |

          response=$(curl -X POST \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: token ${{ steps.app-token.outputs.token }}" \
            https://api.github.com/repos/SiliconLabsSoftware/aep_ci_cd/actions/workflows/community_trigger_sonar.yml/dispatches \
            -d '{"ref":"main","inputs":{"repository": "${{ github.event.pull_request.head.user.login }}/${{ github.event.repository.name }}" ,"branch":"${{ github.head_ref }}","pull_request_id":"${{ github.event.pull_request.number }}","commit_sha":"${{ github.event.pull_request.head.sha }}" }}')

          echo "Triggered workflow: $response"
          if echo "$response" | grep -q '"message": "Not Found"'; then
            echo "Error: Workflow or repository not found. Please check the repository name, workflow file name, and branch name."
            exit 1
          fi

      - name: Wait for Check-Time Workflow to Complete
        id: wait
        env:
          TIMEOUT: 1800
        run: |
          sleep 3
          run_id=$(curl -s \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: token ${{ steps.app-token.outputs.token }}" \
            https://api.github.com/repos/SiliconLabsSoftware/aep_ci_cd/actions/runs \
            | jq '.workflow_runs[] | select(.name=="Trigger_Sonar") | .id' | head -n 1)
          echo "Run ID: https://github.com/SiliconLabsSoftware/aep_ci_cd/actions/runs/$run_id"

          start_time=$(date +%s)
          while true; do
            current_time=$(date +%s)
            elapsed_time=$((current_time - start_time))
            if [ $elapsed_time -ge $TIMEOUT ]; then
              echo "Error: Workflow did not complete within $((TIMEOUT / 60)) minutes."
              exit 1
            fi

            ##########################################
            status=$(curl -s \
              -H "Accept: application/vnd.github.v3+json" \
              -H "Authorization: token ${{ steps.app-token.outputs.token }}" \
              https://api.github.com/repos/SiliconLabsSoftware/aep_ci_cd/actions/runs/$run_id \
              | jq -r '.status')

            conclusion=$(curl -s \
              -H "Accept: application/vnd.github.v3+json" \
              -H "Authorization: token ${{ steps.app-token.outputs.token }}" \
              https://api.github.com/repos/SiliconLabsSoftware/aep_ci_cd/actions/runs/$run_id \
              | jq -r '.conclusion')

            echo "Status: $status, Conclusion: $conclusion"
            if [[ "$status" == "completed" ]]; then
              if [[ "$conclusion" == "success" ]]; then
                echo "Workflow completed successfully."
                exit 0
              else
                echo "TRIGGER_SONAR=failure" >> $GITHUB_ENV
                echo "Workflow failed."
                exit 0
              fi
            fi
            sleep 3
          done

      - name: Got Sonar report
        run: |

          SONAR_REPORT_URL=$GH_PAGE_ROOT_URL/${{ github.event.pull_request.number }}/sonar_report.html

          if [[ "$TRIGGER_SONAR" == "failure" ]]; then
            echo "Workflow failed."
            if curl --output /dev/null --silent --head --fail "$SONAR_REPORT_URL"; then
              echo "View Sonarqube result check at url: $SONAR_REPORT_URL"
            else
              echo "SonarQube ran failed! Did not found SonarQube report!"
            fi

            exit 1
          fi
